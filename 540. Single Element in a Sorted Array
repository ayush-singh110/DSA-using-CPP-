class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();
        int result;
        if (n==1){
            return nums[0];
        }
        else if (nums[0]!=nums[1]){
            return nums[0];
        }
        else if (nums[n-1]!=nums[n-2]){
            return nums[n-1];
        }
        int s=1;
        int e=n-2;
        while (s<=e){
            int mid=e+(s-e)/2;
            if (nums[mid]!=nums[mid+1] && nums[mid]!=nums[mid-1]){
                result=nums[mid];
                break;
            }
            else if ((mid%2!=0 && nums[mid]==nums[mid-1]) || (mid%2==0 && nums[mid]==nums[mid+1])){
                s=mid+1;
            }
            else{
                e=mid-1;
            }
        }
        return result;
        
    }
};
